{"version":3,"sources":["components/searchBar/index.module.css","components/friendCard/index.module.css","serviceWorker.js","services/Vk.js","containers/login/LoginForm.jsx","containers/login/index.jsx","components/searchBar/index.jsx","components/friendCard/index.jsx","containers/main/ProtectedMain.jsx","containers/main/index.jsx","constants/fetch-status.js","App.js","index.js","containers/main/index.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","VkService","apiId","VK","init","inited","attempts","checkCallback","setTimeout","Promise","resolve","reject","console","warn","Auth","login","response","status","session","err","Error","authError","_","logout","res","method","params","expandedParams","v","version","api","not_authorized","unknown","getLoginStatus","getSession","resp","LoginForm","useState","error","setError","routerHistory","useHistory","onClick","a","initAuth","auth","log","push","message","type","title","Login","to","SearchBar","setSearchString","inputValue","setInputValue","isDynamic","setIsDynamic","className","styles","searchBar","value","onChange","e","target","input","placeholder","button","id","checkbox","htmlFor","checkboxLabel","FriendCard","image","name","surname","href","rel","card","avatar","src","width","height","alt","userName","ProtectedMain","friends","setFriends","loginedUser","setLoginedUser","searchString","useEffect","user_ids","mid","fields","callApi","then","catch","items","main","killAuth","userWrapper","userLinkWrapper","loginedUserAvatar","photo_200","first_name","loginedUserName","last_name","length","cards","map","friend","photo_100","key","filter","friendName","toLowerCase","RegExp","test","Main","FETCH_STATUS","App","vkFetchStatus","setVkFetchStatus","isAvailable","exact","path","component","subscribeVkInit","history","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f67dced2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"searchBar_searchBar__SXmRI\",\"input\":\"searchBar_input__3nhhT\",\"button\":\"searchBar_button__2mhQQ\",\"checkbox\":\"searchBar_checkbox__1uZ2A\",\"checkboxLabel\":\"searchBar_checkboxLabel__13rDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"friendCard_card__1hZxh\",\"avatar\":\"friendCard_avatar__7yfr1\",\"userName\":\"friendCard_userName__d_5Kz\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export class VkService {\n    static inited = false;\n    static version = '5.78';\n    static authError = {\n        not_authorized: 'пожалуйста разрешите доступ',\n        unknown: 'пожалуйста войдите через вконтакте, и разрешите доступ'\n    }\n\n    /**\n     * Инициализирует вк апи\n     * @param {number} apiId айди приложения\n     */\n    static subscribeVkInit(apiId) {\n        if (window.VK) {\n            window.VK.init({\n                apiId\n            });\n            VkService.inited = true;\n            return\n        }\n\n        let attempts = 0;\n        const CHECK_TIMEOUT = 500;\n        const MAX_ATTEMPTS = 10;\n\n        const checkCallback = () => {\n            if (attempts >= MAX_ATTEMPTS) {\n                return;\n            }\n\n            attempts++;\n\n            if (window.VK) {\n                window.VK.init({\n                    apiId\n                });\n                VkService.inited = true;\n                return\n            }\n\n            setTimeout(checkCallback, CHECK_TIMEOUT);\n        }\n\n        checkCallback();\n    }\n\n    /**\n     * Провереяет доступность VK Api\n     * @returns {Promise}\n     */\n    static isAvailable() {\n        if (VkService.inited) {\n            return Promise.resolve(true);\n        }\n\n        const CHECK_TIMEOUT = 1500;\n        const MAX_ATTEMPTS = 10;\n\n        return new Promise((resolve, reject) => {\n            let attempts = 0;\n\n            const checkCallback = () => {\n                attempts++;\n                console.warn(`Trying to get access to VK: ATTEMP #${attempts}`)\n    \n                if (VkService.inited) {    \n                    return resolve(true);\n                }\n\n                if (attempts >= MAX_ATTEMPTS) {\n                    return reject(false);\n                }\n\n                setTimeout(checkCallback, CHECK_TIMEOUT);\n            };\n\n            checkCallback();\n        });\n    }\n\n    static getLoginStatus = () => {\n        return new Promise((resolve, _) => {\n            window.VK.Auth.getLoginStatus(res => resolve(res));\n        });\n    };\n\n    static getSession = () => {\n        return window.VK.Auth.getSession(resp => resp)\n    }\n\n    static initAuth() {\n        return new Promise((resolve, reject) => {\n            const successAuth = 'connected';\n            window.VK.Auth.login(response => {\n                if (response.status === successAuth) {\n                    resolve(response.session);\n                } else {\n                    const { status } = response;\n                    const err = new Error(`Ошибка авторизации: ${VkService.authError[status]}`);\n                    reject(err);\n                }\n            });\n        })\n    }\n\n    static killAuth() {\n        return new Promise((resolve, _) => {\n            window.VK.Auth.logout(res => resolve(res))\n        })\n    }\n\n    static callApi(method, params) {\n        const expandedParams = {...params, v: VkService.version}\n        return new Promise((resolve, _) => {\n            window.VK.api(method, expandedParams, response => resolve(response));\n        })\n    }\n}","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { VkService } from '../../services/Vk';\n\nexport const LoginForm = () => {\n    const [error, setError] = useState('');\n    const routerHistory = useHistory();\n    const onClick = async () => {\n        try {\n            // Прокинуть авторизацию в стор менеджер если понадобится\n            const auth = await VkService.initAuth();\n            console.log(`Dispatch auth data if need: `, auth);\n            routerHistory.push('/')\n        } catch(err) {\n            console.error(err);\n            setError(err.message);\n        }\n    }\n    \n    return (\n        <div>\n            <button type='button' onClick={onClick} title='login via vk'>\n                Войти\n            </button>\n            {\n                error &&\n                <p>{error}</p>\n            }\n        </div>\n    )\n}","import React from 'react';\n\nimport { LoginForm } from './LoginForm';\n\nimport { VkService } from '../../services/Vk';\nimport { Link } from 'react-router-dom';\n\nexport const Login = () => {\n    const session = VkService.getSession();\n\n    if (session === null) {\n        return <LoginForm/>\n    }\n\n    return <div>Вы уже авторизованы, вернитесь на <Link to='/'>главную</Link></div>\n}","import React, { useState } from 'react';\n\nimport styles from './index.module.css';\n\nexport const SearchBar = ({setSearchString}) => {\n    const [inputValue, setInputValue] = useState('');\n    const [isDynamic, setIsDynamic] = useState(false);\n    const onToggleCheckbox = () => setIsDynamic(!isDynamic);\n    const onSearchButtonClick = () => setSearchString(inputValue);\n    const onClearSearchClick = () => {\n        setSearchString('');\n        setInputValue('');\n    }\n\n    const onChange = e => {\n        setInputValue(e.target.value);\n        if (isDynamic) {\n            setSearchString(e.target.value);\n        }\n    };\n\n    return (\n        <div className={styles.searchBar}>\n            <input\n                value={inputValue}\n                onChange={onChange}\n                type='text'\n                className={styles.input}\n                placeholder='Введите имя друга'/>\n            <button type='button' onClick={onSearchButtonClick} className={styles.button}>Найти</button>\n            <button type='button' onClick={onClearSearchClick} className={styles.button}>Очистить</button>\n            <input\n                id='search-bar-dynamic-toggle'\n                type='checkbox'\n                value={isDynamic}\n                onChange={onToggleCheckbox}\n                className={styles.checkbox}/>\n            <label htmlFor='search-bar-dynamic-toggle' className={styles.checkboxLabel}>\n                <span>Искать динамически</span>\n            </label>\n        </div>\n    )\n}","import React from 'react';\n\nimport styles from './index.module.css';\n\nexport const FriendCard = ({image, name, surname, id}) => (\n    <a href={`https://vk.com/id${id}`} target='_blank' rel='noreferrer noopener' className={styles.card}>\n        <img\n            className={styles.avatar}\n            src={image}\n            width='100'\n            height='100'\n            title={`Аватар пользователя ${name} ${surname}`}\n            alt={`Аватар пользователя ${name} ${surname}`}/>\n        <p className={styles.userName}>\n            {`${name} ${surname}`}\n        </p>\n    </a>\n)","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { SearchBar } from '../../components/searchBar';\nimport { FriendCard } from '../../components/friendCard';\n\nimport { VkService } from '../../services/Vk';\n\nimport styles from './index.module.css';\n\nexport const ProtectedMain = () => {\n    const [friends, setFriends] = useState([]);\n    const [loginedUser, setLoginedUser] = useState(null);\n    const [searchString, setSearchString] = useState('');\n    const routerHistory = useHistory();\n    \n    useEffect(() => {\n        const loginedUserId = VkService.getSession().mid;\n        const method = 'users.get';\n        const params = {\n            user_ids: loginedUserId,\n            fields: 'photo_200'\n        };\n        VkService.callApi(method, params)\n            .then(res => setLoginedUser(res.response[0]))\n            .catch(err => console.error(err));        \n    }, []);\n\n    useEffect(() => {\n        if (loginedUser !== null) {\n            const method = 'friends.get';\n            const params = {fields: 'first_name, last_name, photo_100'};\n            VkService.callApi(method, params)\n                .then(res => setFriends(res.response.items))\n                .catch(err => console.error(err))\n        }\n    }, [loginedUser]);\n\n    const onLogoutClick = () => (\n        VkService.killAuth()\n            .then(() => routerHistory.push('/login'))\n            .catch(err => console.error(err))\n    );\n\n    const renderFilteredFriends = () => {\n        const renderArray = friends.filter(friend => {\n            const {first_name, last_name} = friend;\n            const friendName = `${first_name} ${last_name}`.toLowerCase();\n            const re = new RegExp(searchString.toLowerCase(), 'g');\n            return re.test(friendName);\n        });\n\n        return renderArray.map(friend => {\n            const {id, first_name, last_name, photo_100} = friend;\n            return (\n                <FriendCard\n                    key={id}\n                    image={photo_100}\n                    id={id}\n                    name={first_name}\n                    surname={last_name}/>\n            )\n        });\n    };\n\n    const renderFriends = () => {\n        if (searchString === '') {\n            return friends.map(friend => {\n                const {id, first_name, last_name, photo_100} = friend;\n                return (\n                    <FriendCard\n                        key={id}\n                        image={photo_100}\n                        id={id}\n                        name={first_name}\n                        surname={last_name}/>\n                )\n            });\n        }\n\n        return renderFilteredFriends();\n    }\n\n    return (\n        <div className={styles.main}>\n            <button type='button' onClick={onLogoutClick} className={styles.logout}>Выйти</button>\n            {\n                loginedUser &&\n                <div className={styles.userWrapper}>\n                    <a\n                        href={`https://vk.com/id${loginedUser.id}`}\n                        target='_blank'\n                        rel='noreferrer noopener'\n                        className={styles.userLinkWrapper}>\n                        <img\n                            className={styles.loginedUserAvatar}\n                            src={loginedUser.photo_200}\n                            alt={`Аватар пользователя ${loginedUser.first_name}`}\n                            width='200'\n                            height='200'/>\n                        <p className={styles.loginedUserName}>\n                            {`${loginedUser.first_name} ${loginedUser.last_name}`}\n                        </p>\n                    </a>\n                </div>\n            }\n            {\n                friends.length > 0 && <SearchBar setSearchString={setSearchString}/>\n            }\n            {\n                searchString &&\n                <p>Результаты поиска по запросу: \"{searchString}\"</p>\n            }\n            <div className={styles.cards}>\n                {\n                    renderFriends()\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { VkService } from '../../services/Vk';\n\nimport { ProtectedMain } from './ProtectedMain';\n\nexport const Main = () => {\n    const session = VkService.getSession();\n    if (session === null) {\n        return <div>Пожалуйста <Link to='/login'><b>войдите</b></Link>, чтобы продолжить</div>\n    }\n    \n    return <ProtectedMain/>\n}","export const FETCH_STATUS = {\n    initial: 'initial',\n    loading: 'loading',\n    error: 'error',\n    success: 'success'\n}","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nimport { Login } from './containers/login';\nimport { Main } from './containers/main';\n\nimport { VkService } from './services/Vk';\nimport { FETCH_STATUS } from './constants/fetch-status';\n\nimport './App.css';\n\nfunction App() {\n    const [vkFetchStatus, setVkFetchStatus] = useState(FETCH_STATUS.initial);\n    const routerHistory = useHistory();\n\n    /** Проверяет доступность VK Api */\n    useEffect(() => {\n        setVkFetchStatus(FETCH_STATUS.loading);\n        VkService.isAvailable()\n            .then(() => {\n                VkService.getLoginStatus()\n                    .then(res => {\n                        const success = 'connected';\n                        if (res.status !== success) {\n                            routerHistory.push('/login');\n                        }\n                        setVkFetchStatus(FETCH_STATUS.success)\n                    })\n                    .catch(err => {\n                        console.error(err)\n                        setVkFetchStatus(FETCH_STATUS.error)\n                    });\n            })\n            .catch((err) => {\n                console.error(err);\n                setVkFetchStatus(FETCH_STATUS.error)\n            });\n    }, []);\n\n    /** Проверяет авторизацию */\n\n    if (vkFetchStatus === FETCH_STATUS.initial) {\n        return <div>Welcome. App is starting..</div>\n    }\n\n    if (vkFetchStatus === FETCH_STATUS.loading) {\n        return <div>Checking is vk auth available</div>\n    }\n\n    if (vkFetchStatus === FETCH_STATUS.error) {\n        return <div>Oops, VK api is not available, try to reload page</div>\n    }\n\n    return (\n        <>\n            <Switch>\n                <Route exact path='/' component={Main}/>\n                <Route path='/login' component={Login}/>\n            </Switch>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createBrowserHistory } from 'history';\n\nimport App from './App';\n\nimport './index.css';\nimport { VkService } from './services/Vk';\n\nVkService.subscribeVkInit(7299169);\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <BrowserRouter history={history}>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__1j8rY\",\"userWrapper\":\"main_userWrapper__2ddZn\",\"userLinkWrapper\":\"main_userLinkWrapper__29ecm\",\"loginedUserAvatar\":\"main_loginedUserAvatar__3lvOO\",\"loginedUserName\":\"main_loginedUserName__BCH_f\",\"cards\":\"main_cards__1HhsC\",\"logout\":\"main_logout__28enz\"};"],"sourceRoot":""}